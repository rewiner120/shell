在MySQL的replicatin环境中master/slave常用参数 
 
master所有参数

1.
log-bin=mysql-bin  
 //控制master的是否开启binlog记录功能；二进制文件最好放在单独的目录下，这不但方便优化、更方便维护。重新命名二进制日志很简单，只需要修改[mysqld]里的
log_bin选项，这里有一点需要注意，如下例子：

log_bin=/home/mysql/binlog/binlog.log
[root@localhost ~]# ll /home/mysql/binlog
total 8
-rw-rw---- 1 mysql mysql 98 Mar  7 17:24 binlog.000001
-rw-rw---- 1 mysql mysql 33 Mar  7 17:24 binlog.index
[root@localhost ~]#
 
从上面的例子可以看到，我要重新调整logbin的路径为“/home/mysql/binlog”，但我log_bin的设置却有些不同,这里需要注意两点
1.1).目录的文件夹命名不能有空格
1.2).指定目录时候一定要以*.log结尾，即不能仅仅指定到文件夹的级别，否则在重启mysql时会报错。
2.
server-id=1 
//每个server服务的标识，在master/slave环境中，此变量一定要不一样
3. 
expire_logs_days=15
//通过此来实现master自动删除binlog
4.
innodb_flush_log_at_trx_commit=1 
//此单数表示在事务提交时，处理重做日志的方式；此变量有三个可选值0，1，2
 0：当事务提交时，并不将事务的重做日志写入日志文件，而是等待每秒刷新一次
 1：当事务提交时，将重做日志缓存的内容同步写到磁盘日志文件，为了保证数据一致性，在replication环境中使用此值。
 2：当事务提交时，将重做日志缓存的内容异步写到磁盘日志文件（写到文件系统缓存中）
建议必须设置innodb_flush_log_at_trx_commit=1 
 
5.
sync_binlog=1 
//此参数表示每写缓冲多少次就同步到磁盘；sync_binlog=1表示同步写缓冲和磁盘二进制日志文件，不使用文件系统缓存，在使用innodb事务引擎时，在复制环境中，为了保证最大的可用性，都设置为“1”，但会对影响io的性能。及时设置为“1”，也会有问题发生，假如当二进制日志写入磁盘，但事务还没有commit，这个时候宕机，当服务再次起来的恢复的时候，无法回滚以及记录到二进制日志的未提交的内容；这个时候就会造成master和slave数据不一致，这时就需要参数innodb_support_xa=1来保证。建议必须设置
6.
innodb_support_xa=1
//此参数与XA事务有关，它保证了二进制日志和innodb数据文件的同步，保证复制环境中数据一致性。建议必须设置
7.
binlog-do-db=skate_db
//只记录指定数据库的更新到二进制日志中
8.
binlog-do-table=skate_tab
//只记录指定表的更新到二进制日志中
9.
binlog-ignore-db=skate_db
//忽略指定数据库的更新到二进制日志中
10.
log_slave_updates=1
//此参数控制slave数据库是否把从master接受到的log并在本slave执行的内容记录到slave的二进制日志中，在级联复制环境中（包括双master环境），这个参数是必须的
11.
binlog_format=statement|row|mixed
//控制以什么格式记录二进制日志的内容，默认是mixed
12.
max_binlog_size
//master的每个二进制日志文件的大小，默认1G
13.
binlog_cache_size
//所有未提交的事务都会咱被记录到一个缓存或临时文件中，待提交时，统一同步到二进制日志中，此变量是基于session的，每个会话开启一个binlog_cache_size大小的缓存。通过变量“Binlog_cache_disk_use”和“Binlog_cache_use”来设置binlog_cache_size的大小。
说明：
Binlog_cache_disk_use：使用临时文件写二进制日志的次数
Binlog_cache_use：使用缓冲记写二进制的次数
14.
auto_increment_increment=2  //增长的步长
auto_increment_offset=1     //起始位置
//在双master环境下可以防止键值冲突
 
slave所用参数
1.
server-id=2
//和master的含义一样，如上 
2.
log-bin=mysql-bin   
//和master的含义一样，如上
3.
relay-log=relay-bin  
//中继日志文件的路径名称
4.  
relay-log-index=relay-bin   
//中继日志索引文件的路径名称
5. 
log_slave_updates=1  
//和master的含义一样，如上
6.
read_only=1
//使数据库只读，此参数在slave的复制环境和具有super权限的用户不起作用，对于复制环境设置read_only=1非常有用，它可以保证slave只接受master的更新，而不接受client的更新。
mysq> set global read_only=1
  
7.  
skip_slave_start
//使slave在mysql启动时不启动复制进程，mysql起来之后使用 start slave启动，建议必须
8.
replicate-do-db 
//只复制指定db
9.
replicate-do-table
//只复制指定表
10. 
replicate-ingore-table
//忽略指定表
11. 
replicate_wild_do_table=skatedb.%
//模糊匹配复制指定db
12.
 auto_increment_increment=2
 auto_increment_offset=1
//和master含义一样，参考如上 
 
13。
log_slow_slave_statements 
//在slave上开启慢查询日志，在query的时间大于long_query_time时，记录在慢查询日志里
 
14.
max_relay_log_size
//slave上的relay log的大小，默认是1G
15.
relay_log_info_file
//中继日志状态信息文件的路径名称
16. 
relay_log_purge
//当relay log不被需要时就删除，默认是on， SET GLOBAL relay_log_purge=1
17.
replicate-rewrite-db=from_name->to_name 
//数据库的重定向，可以把分库汇总到主库便于统计分析
